# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import boomerCall_pb2 as boomerCall__pb2


class BoomerCallServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.InitBommer = channel.unary_unary(
                '/BoomerCallService/InitBommer',
                request_serializer=boomerCall__pb2.InitBommerRequest.SerializeToString,
                response_deserializer=boomerCall__pb2.BoomerCallResponse.FromString,
                )
        self.EndBommer = channel.unary_unary(
                '/BoomerCallService/EndBommer',
                request_serializer=boomerCall__pb2.EndBommerRequest.SerializeToString,
                response_deserializer=boomerCall__pb2.BoomerCallResponse.FromString,
                )


class BoomerCallServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def InitBommer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EndBommer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BoomerCallServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'InitBommer': grpc.unary_unary_rpc_method_handler(
                    servicer.InitBommer,
                    request_deserializer=boomerCall__pb2.InitBommerRequest.FromString,
                    response_serializer=boomerCall__pb2.BoomerCallResponse.SerializeToString,
            ),
            'EndBommer': grpc.unary_unary_rpc_method_handler(
                    servicer.EndBommer,
                    request_deserializer=boomerCall__pb2.EndBommerRequest.FromString,
                    response_serializer=boomerCall__pb2.BoomerCallResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'BoomerCallService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class BoomerCallService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def InitBommer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BoomerCallService/InitBommer',
            boomerCall__pb2.InitBommerRequest.SerializeToString,
            boomerCall__pb2.BoomerCallResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EndBommer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BoomerCallService/EndBommer',
            boomerCall__pb2.EndBommerRequest.SerializeToString,
            boomerCall__pb2.BoomerCallResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
